import{_ as e,c as a,a2 as l,o}from"./chunks/framework.BFEa0ZLl.js";const f=JSON.parse('{"title":"函数: chunk()","description":"","frontmatter":{},"headers":[],"relativePath":"src/functions/chunk.md","filePath":"src/functions/chunk.md","lastUpdated":null}'),r={name:"src/functions/chunk.md"};function d(n,t,c,s,h,i){return o(),a("div",null,t[0]||(t[0]=[l('<p><a href="./../README.html"><strong>petite-utils</strong></a> • <strong>Docs</strong></p><hr><h1 id="函数-chunk" tabindex="-1">函数: chunk() <a class="header-anchor" href="#函数-chunk" aria-label="Permalink to &quot;函数: chunk()&quot;">​</a></h1><blockquote><p><strong>chunk</strong>&lt;<code>T</code>&gt;(<code>array</code>, <code>size</code>): <code>T</code>[][]</p></blockquote><h2 id="类型参数" tabindex="-1">类型参数 <a class="header-anchor" href="#类型参数" aria-label="Permalink to &quot;类型参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类型参数</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>T</code>[]</td><td style="text-align:left;">数组</td></tr><tr><td style="text-align:left;"><code>size</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">分块大小</td></tr></tbody></table><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h2><p><code>T</code>[][]</p><p>返回分块后的数组</p><h2 id="源码" tabindex="-1">源码 <a class="header-anchor" href="#源码" aria-label="Permalink to &quot;源码&quot;">​</a></h2><p><a href="https://github.com/jackchoumine/petite-utils/blob/e51e2f320814d85732953bb8e0ab3c49835a8192/src/utils/chunk.ts#L16" target="_blank" rel="noreferrer">utils/chunk.ts:16</a></p>',13)]))}const b=e(r,[["render",d]]);export{f as __pageData,b as default};
