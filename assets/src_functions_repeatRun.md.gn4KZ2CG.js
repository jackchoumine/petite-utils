import{_ as a,c as e,ag as t,o as i}from"./chunks/framework.BcBuEkoe.js";const c=JSON.parse('{"title":"函数: repeatRun()","description":"","frontmatter":{},"headers":[],"relativePath":"src/functions/repeatRun.md","filePath":"src/functions/repeatRun.md","lastUpdated":null}'),n={name:"src/functions/repeatRun.md"};function l(p,s,r,h,o,d){return i(),e("div",null,s[0]||(s[0]=[t(`<p><a href="./../README.html"><strong>petite-utils</strong></a> • <strong>Docs</strong></p><hr><h1 id="函数-repeatrun" tabindex="-1">函数: repeatRun() <a class="header-anchor" href="#函数-repeatrun" aria-label="Permalink to &quot;函数: repeatRun()&quot;">​</a></h1><blockquote><p><strong>repeatRun</strong>(<code>fn</code>, <code>__namedParameters</code>, <code>params</code>?): <a href="./../type-aliases/StopRepeat.html"><code>StopRepeat</code></a></p></blockquote><h2 id="repeat-call-function" tabindex="-1">repeat call function <a class="header-anchor" href="#repeat-call-function" aria-label="Permalink to &quot;repeat call function&quot;">​</a></h2><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><a href="./../type-aliases/RepeatFn.html"><code>RepeatFn</code></a></td><td style="text-align:left;">will be called repeatly</td></tr><tr><td style="text-align:left;"><code>__namedParameters</code></td><td style="text-align:left;"><a href="./../interfaces/RepeatOptions.html"><code>RepeatOptions</code></a></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>params</code>?</td><td style="text-align:left;"><code>unknown</code></td><td style="text-align:left;">params pass to fn</td></tr></tbody></table><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h2><p><a href="./../type-aliases/StopRepeat.html"><code>StopRepeat</code></a></p><p>stopFunction to stop repeat</p><h2 id="示例s" tabindex="-1">示例s <a class="header-anchor" href="#示例s" aria-label="Permalink to &quot;示例s&quot;">​</a></h2><h3 id="pass-a-arrow-function-to-repeat" tabindex="-1">pass a arrow function to repeat <a class="header-anchor" href="#pass-a-arrow-function-to-repeat" aria-label="Permalink to &quot;pass a arrow function to repeat&quot;">​</a></h3><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repeatRun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">repeatTimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(repeatTimes)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (repeatTimes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// stop function from fn params</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="pass-a-function-definition-to-repeat-and-stop-it-by-repeat-return-value" tabindex="-1">pass a function definition to repeat and stop it by repeat return value <a class="header-anchor" href="#pass-a-function-definition-to-repeat-and-stop-it-by-repeat-return-value" aria-label="Permalink to &quot;pass a function definition to repeat and stop it by repeat return value&quot;">​</a></h3><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stop </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> repeatRun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sayHi, { interval: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sayHi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">repeatTimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(repeatTimes)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (repeatTimes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// stop from repeatRun return value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="源码" tabindex="-1">源码 <a class="header-anchor" href="#源码" aria-label="Permalink to &quot;源码&quot;">​</a></h2><p><a href="https://github.com/jackchoumine/petite-utils/blob/2713a778237e076678848f5ef153662df837f86c/src/utils/repeatRun.ts#L57" target="_blank" rel="noreferrer">utils/repeatRun.ts:57</a></p>`,17)]))}const u=a(n,[["render",l]]);export{c as __pageData,u as default};
