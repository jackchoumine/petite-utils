import{_ as e,c as a,ag as r,o as l}from"./chunks/framework.BcBuEkoe.js";const f=JSON.parse('{"title":"函数: isEqualArray()","description":"","frontmatter":{},"headers":[],"relativePath":"src/functions/isEqualArray.md","filePath":"src/functions/isEqualArray.md","lastUpdated":null}'),o={name:"src/functions/isEqualArray.md"};function s(d,t,i,n,c,h){return l(),a("div",null,t[0]||(t[0]=[r('<p><a href="./../README.html"><strong>petite-utils</strong></a> • <strong>Docs</strong></p><hr><h1 id="函数-isequalarray" tabindex="-1">函数: isEqualArray() <a class="header-anchor" href="#函数-isequalarray" aria-label="Permalink to &quot;函数: isEqualArray()&quot;">​</a></h1><blockquote><p><strong>isEqualArray</strong>(<code>arr1</code>, <code>arr2</code>): <code>boolean</code></p></blockquote><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>arr1</code></td><td style="text-align:left;"><code>any</code>[]</td><td style="text-align:left;">第一个数组</td></tr><tr><td style="text-align:left;"><code>arr2</code></td><td style="text-align:left;"><code>any</code>[]</td><td style="text-align:left;">第二个数组</td></tr></tbody></table><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h2><p><code>boolean</code></p><h2 id="源码" tabindex="-1">源码 <a class="header-anchor" href="#源码" aria-label="Permalink to &quot;源码&quot;">​</a></h2><p><a href="https://github.com/jackchoumine/petite-utils/blob/2713a778237e076678848f5ef153662df837f86c/src/type/isEqualArray.ts#L14" target="_blank" rel="noreferrer">type/isEqualArray.ts:14</a></p>',10)]))}const y=e(o,[["render",s]]);export{f as __pageData,y as default};
