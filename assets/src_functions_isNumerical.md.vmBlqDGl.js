import{_ as t,c as a,a2 as r,o as i}from"./chunks/framework.BFEa0ZLl.js";const p=JSON.parse('{"title":"函数: isNumerical()","description":"","frontmatter":{},"headers":[],"relativePath":"src/functions/isNumerical.md","filePath":"src/functions/isNumerical.md","lastUpdated":null}'),o={name:"src/functions/isNumerical.md"};function l(s,e,n,c,d,h){return i(),a("div",null,e[0]||(e[0]=[r('<p><a href="./../README.html"><strong>petite-utils</strong></a> • <strong>Docs</strong></p><hr><h1 id="函数-isnumerical" tabindex="-1">函数: isNumerical() <a class="header-anchor" href="#函数-isnumerical" aria-label="Permalink to &quot;函数: isNumerical()&quot;">​</a></h1><blockquote><p><strong>isNumerical</strong>(<code>value</code>): <code>boolean</code></p></blockquote><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">要检查的值，可以是任何类型</td></tr></tbody></table><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h2><p><code>boolean</code></p><p>如果是数字或可转换为有效数字的字符串，则返回 true，否则返回 false</p><h2 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h2><p>检查给定的值是否为数值，包括数字、字符串数字 和 BigInt 此外，如果给定值是一个非空字符串，它将尝试将其转换为数字并检查其有效性</p><h2 id="源码" tabindex="-1">源码 <a class="header-anchor" href="#源码" aria-label="Permalink to &quot;源码&quot;">​</a></h2><p><a href="https://github.com/jackchoumine/petite-utils/blob/8f30d0c9c69ab90d8b1705b12eb2e55518a7a84e/src/type/type.ts#L120" target="_blank" rel="noreferrer">type/type.ts:120</a></p>',13)]))}const b=t(o,[["render",l]]);export{p as __pageData,b as default};
