import{_ as e,c as a,ag as o,o as l}from"./chunks/framework.BcBuEkoe.js";const u=JSON.parse('{"title":"函数: clone()","description":"","frontmatter":{},"headers":[],"relativePath":"src/functions/clone.md","filePath":"src/functions/clone.md","lastUpdated":null}'),r={name:"src/functions/clone.md"};function n(c,t,d,s,i,h){return l(),a("div",null,t[0]||(t[0]=[o('<p><a href="./../README.html"><strong>petite-utils</strong></a> • <strong>Docs</strong></p><hr><h1 id="函数-clone" tabindex="-1">函数: clone() <a class="header-anchor" href="#函数-clone" aria-label="Permalink to &quot;函数: clone()&quot;">​</a></h1><blockquote><p><strong>clone</strong>&lt;<code>T</code>&gt;(<code>source</code>): <code>any</code></p></blockquote><h2 id="类型参数" tabindex="-1">类型参数 <a class="header-anchor" href="#类型参数" aria-label="Permalink to &quot;类型参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">类型参数</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>source</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h2><p><code>any</code></p><h2 id="源码" tabindex="-1">源码 <a class="header-anchor" href="#源码" aria-label="Permalink to &quot;源码&quot;">​</a></h2><p><a href="https://github.com/jackchoumine/petite-utils/blob/2713a778237e076678848f5ef153662df837f86c/src/utils/clone.ts#L16" target="_blank" rel="noreferrer">utils/clone.ts:16</a></p>',12)]))}const b=e(r,[["render",n]]);export{u as __pageData,b as default};
